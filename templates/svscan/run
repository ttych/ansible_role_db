#!/bin/sh

PATH="/usr/local/bin:/usr/local/sbin:$PATH"
for postgres_dir in /usr/local/lib/postgresql/*/bin/ /usr/lib/postgresql/*/bin/ ; do
    [ -d "$postgres_dir" ] || continue
    PATH="$postgres_dir:$PATH"
done
export PATH

POSTGRESQL_USER="${POSTGRESQL_USER:-{{ db_postgresql_user }}}"
POSTGRESQL_DB_DIR="${POSTGRESQL_DB_DIR:-{{ db_postgresql_db_dir }}}"

which_db_data()
{
    if ! [ -r "$POSTGRESQL_DB_DIR/which_db_data" ]; then
        echo default > "$POSTGRESQL_DB_DIR/which_db_data"
    fi

    which_db_data=$(cat "$POSTGRESQL_DB_DIR/which_db_data")
    which_db_data="${which_db_data:-default}"
    POSTGRESQL_DB_DATA="$POSTGRESQL_DB_DIR/$which_db_data"
}


# POSTGRESQL_CTL_FLAGS="${POSTGRESQL_CTL_FLAGS:-{{ db_postgresql_ctl_flags }}}"
# postgresql_run()
# {
#     exec setuidgid "$POSTGRESQL_USER" pg_ctl -D "$POSTGRESQL_DB_DATA" $POSTGRESQL_FLAGS
# }

POSTGRESQL_LISTEN="${POSTGRESQL_LISTEN:-{{ db_postgresql_listen }}}"
POSTGRESQL_PORT="${POSTGRESQL_PORT:-{{ db_postgresql_port }}}"
POSTGRESQL_SOCKET="${POSTGRESQL_SOCKET:-{{ db_postgresql_socket }}}"
postgresql_run()
{
    exec setuidgid "$POSTGRESQL_USER" postgres \
         -D "$POSTGRESQL_DB_DATA" \
         -h "$POSTGRESQL_LISTEN" \
         -p "$POSTGRESQL_PORT" \
         -k "$POSTGRESQL_SOCKET"
}


POSTGRESQL_INITDB_FLAGS="${POSTGRESQL_INITDB_FLAGS:-{{ db_postgresql_initdb_flags }}}"
postgresql_initdb()
{
    setuidgid "$POSTGRESQL_USER" initdb \
              --auth-host={{ db_postgresql_auth_host }} --auth-local={{ db_postgresql_auth_local }} \
              -D "$POSTGRESQL_DB_DATA" $POSTGRESQL_INITDB_FLAGS
}

pg_version()
{
    pg_version=$(postgres --version | awk '{print $3}')
    pg_version="${pg_version%.*}"
}

db_version()
{
    db_version=$(cat "$POSTGRESQL_DB_DATA/PG_VERSION")
}

compare_version()
{
    pg_version
    db_version

    if [ "$pg_version" != "$db_version" ]; then
        echo >&2 "pg_version ($pg_version) does not match db_version ($db_version)"
        return 1
    fi
}

upgrade_db()
{
    POSTGRESQL_DB_DATA_PREVIOUS="$POSTGRESQL_DB_DATA.$(date "+%Y%m%d%H%M%S")"
    setuidgid "$POSTGRESQL_USER" mv -i "$POSTGRESQL_DB_DATA" "$POSTGRESQL_DB_DATA_PREVIOUS" || return

    pg_dist="/usr/local/lib/postgresql/$2"
    [ ! -d "$pg_dist" ] && pg_dist="/usr/lib/postgresql/$2"
    [ ! -d "$pg_dist" ] && echo >&2 "upgrade: no pg dist for version $2" && return 1

    db_dist="/usr/local/lib/postgresql/$1"
    [ ! -d "$db_dist" ] && db_dist="/usr/lib/postgresql/$1"
    [ ! -d "$db_dist" ] && echo >&2 "upgrade: no db dist for version $1" && return 1


    setuidgid "$POSTGRESQL_USER" $pg_dist/bin/pg_upgrade \
        --old-datadir="$POSTGRESQL_DB_DATA_PREVIOUS" \
        --new-datadir="$POSTGRESQL_DB_DATA" \
        --old-bindir="$db_dist/bin" \
        --new-bindir="$pg_dist/bin" \
        --old-options '-c config_file=$POSTGRESQL_DB_DATA_PREVIOUS/postgresql.conf' \
        --new-options '-c config_file=$POSTGRESQL_DB_DATA/postgresql.conf' \
        --check || {
        echo >&2 "upgrade: upgrade --check failed !"
        return 1
    }

    setuidgid "$POSTGRESQL_USER" $pg_dist/bin/pg_upgrade \
        --old-datadir="$POSTGRESQL_DB_DATA_PREVIOUS" \
        --new-datadir="$POSTGRESQL_DB_DATA" \
        --old-bindir="$db_dist/bin" \
        --new-bindir="$pg_dist/bin" \
        --old-options '-c config_file=$POSTGRESQL_DB_DATA_PREVIOUS/postgresql.conf' \
        --new-options '-c config_file=$POSTGRESQL_DB_DATA/postgresql.conf'
}



which_db_data

if [ ! -d "$POSTGRESQL_DB_DATA" ]; then
    postgresql_initdb 2>&1
fi

if ! compare_version; then
    upgrade_db $db_version $pg_version
fi

postgresql_run 2>&1
